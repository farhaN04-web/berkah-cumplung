openapi: 3.0.0
info:
  title: Users API
  description: API for managing user-related information
  version: 1.0.0
paths:
  /v1/user/profile:
    get:
      summary: Get user profile
      description: Retrieves the profile information of the authenticated user.
      operationId: getUserProfile
      tags:
        - Route Users - Profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved the user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User retrieved successfully!
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: johndoe@example.com
                      role:
                        type: string
                        example: FUNDRAISER
                      photo:
                        type: string
                        example: https://example.com/images/johndoe.jpg
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: User not found
        '500':
          description: Internal server error
    put:
      summary: Update user profile
      description: Updates the profile information of the authenticated user.
      operationId: updateUserProfile
      tags:
        - Route Users - Profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Jane Doe
      responses:
        '200':
          description: Successfully updated the user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User updated successfully!
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 12345
                      name:
                        type: string
                        example: Jane Doe
                      email:
                        type: string
                        example: janedoe@example.com
                      role:
                        type: string
                        example: FUNDRAISER
                      photo:
                        type: string
                        example: https://example.com/images/janedoe.jpg
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: User not found
        '500':
          description: Internal server error
  /v1/user/change-password:
    put:
      summary: Change user password
      description: Changes the password of the authenticated user.
      operationId: changeUserPassword
      tags:
        - Route Users - Profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  example: oldpassword123
                newPassword:
                  type: string
                  example: newpassword123
                newConfirmPassword:
                  type: string
                  example: newpassword123
      responses:
        '200':
          description: Successfully changed the user password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Password changed successfully!
        '400':
          description: Bad request - Validation error or mismatched passwords
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: User not found
        '500':
          description: Internal server error
  /v1/user/profile/image:
    put:
      summary: Update user profile image
      description: Updates the profile image of the authenticated user.
      operationId: updateUserProfileImage
      tags:
        - Route Users - Profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successfully updated the user profile image
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User profile image updated successfully!
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 12345
                      name:
                        type: string
                        example: Jane Doe
                      email:
                        type: string
                        example: janedoe@example.com
                      role:
                        type: string
                        example: FUNDRAISER
                      photo:
                        type: string
                        example: https://example.com/images/janedoe.jpg
        '400':
          description: Bad request - Validation error
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: User not found
        '500':
          description: Internal server error
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT